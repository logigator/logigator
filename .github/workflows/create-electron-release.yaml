name: 'Create Electron Release'
on: workflow_dispatch

jobs:
  createReleaseBuildWindows:
    name: 'Create Release and Build Windows'
    runs-on: windows-latest
    outputs:
      asset_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: 'Initialize mandatory git config'
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: 'Get package version'
        id: version
        shell: powershell
        run: |
          echo "::set-output name=pkg_version::$(node -e "console.log(require('./logigator-editor/package.json').version);")"

      - name: 'Create Git Tag'
        run: |
          git tag ${{ steps.version.outputs.pkg_version }}
          git push origin ${{ steps.version.outputs.pkg_version }}

      - name: Build
        working-directory: logigator-editor
        run: |
          npm i
          npm run build:electron:win

      - name: Zip
        shell: powershell
        working-directory: logigator-editor
        run: |
          compress-archive -path ".\release\Logigator-win32-x64\" -destinationpath ".\release\Logigator-win32-x64.zip" -compressionlevel optimal
          compress-archive -path ".\release\Logigator-win32-ia32\" -destinationpath ".\release\Logigator-win32-x32.zip" -compressionlevel optimal
          compress-archive -path ".\release\Logigator-win32-arm64\" -destinationpath ".\release\Logigator-win32-arm64.zip" -compressionlevel optimal

      - name: 'Create Release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.pkg_version }}
          release_name: Logigator Editor - Electron App  ${{ steps.version.outputs.pkg_version }}
          draft: false
          prerelease: false

      - name: 'Upload Asset Win32x64'
        id: upload-asset-win32x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./logigator-editor/release/Logigator-win32-x64.zip
          asset_name: Logigator-win32-x64.zip
          asset_content_type: application/zip

      - name: 'Upload Asset Win32x32'
        id: upload-asset-win32x32
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./logigator-editor/release/Logigator-win32-x32.zip
          asset_name: Logigator-win32-x32.zip
          asset_content_type: application/zip

      - name: 'Upload Asset Win32arm64'
        id: upload-asset-win32arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./logigator-editor/release/Logigator-win32-arm64.zip
          asset_name: Logigator-win32-arm64.zip
          asset_content_type: application/zip

  buildLinux:
    name: 'Build Linux'
    needs: createReleaseBuildWindows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Build
        working-directory: logigator-editor
        run: |
          sudo apt-get update && sudo apt-get -qq -y install gcc-multilib g++-multilib
          npm i
          npm run build:electron:linux

      - name: Zip
        working-directory: logigator-editor/release
        run: |
          zip -r -9 ./Logigator-linux-x64.zip ./Logigator-linux-x64/
          zip -r -9 ./Logigator-linux-x32.zip ./Logigator-linux-ia32/
          zip -r -9 ./Logigator-linux-arm64.zip ./Logigator-linux-arm64/

      - name: 'Upload Asset Linuxx64'
        id: upload-asset-linuxx64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createReleaseBuildWindows.outputs.asset_upload_url }}
          asset_path: ./logigator-editor/release/Logigator-linux-x64.zip
          asset_name: Logigator-linux-x64.zip
          asset_content_type: application/zip

      - name: 'Upload Asset Linuxx32'
        id: upload-asset-linuxx32
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createReleaseBuildWindows.outputs.asset_upload_url }}
          asset_path: ./logigator-editor/release/Logigator-linux-x32.zip
          asset_name: Logigator-linux-x32.zip
          asset_content_type: application/zip

      - name: 'Upload Asset Linuxarm64'
        id: upload-asset-linuxarm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createReleaseBuildWindows.outputs.asset_upload_url }}
          asset_path: ./logigator-editor/release/Logigator-linux-arm64.zip
          asset_name: Logigator-linux-arm64.zip
          asset_content_type: application/zip
